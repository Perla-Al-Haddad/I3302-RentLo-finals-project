@using Microsoft.AspNetCore.Identity
@model I3302_RentLo_finals_project.Models.PropertyListModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Index";
}


@section Scripts {
<script>
    function updateCitiesDropdown(t) {
        console.log('/Properties/OnGetCitiesByCountryId?countryId=' + $(t).val())
        $.ajax({
            type: "GET",
            url: '/Properties/OnGetCitiesByCountryId?countryId=' + $(t).val(),
            success: function (data) {
                $('#city-select').removeClass('d-none');
                let options_html = "<option value=''>Filter by City</option>";
                for (let i = 0; i < data.length; i++)
                    options_html += "<option value='" + data[i].id + "'>" + data[i].cityName + "</option>";
                console.log(options_html);
                $('#city-select').html(options_html);
            },
            error: function (result) {
                alert("fail");
            }
        });
    }
</script>
}


<div class="col-12">
    <div class="row">

        <div class="col-12 p-0">
            <div class="card grid-margin card-rounded">
                <div class="card-body">
                    <div class="d-flex align-items-center justifty-content-between">
                        <div>
                            <h1 class="m-0 col">Property Catalogue</h1>
                        </div>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            @if (User.IsInRole("PropertyManagers") || User.IsInRole("PropertyAdministrators"))
                            {
                                <div class="col d-flex justify-content-end">
                                    <a class="btn btn-secondary" asp-action="Create">
                                        <i class="bi bi-plus-circle"></i> Create New
                                    </a>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-12 px-0">
            <div class="card grid-margin card-rounded">
                <div class="card-body">
                    <form asp-action="Index" method="get">
                        <div class="input-group form-actions no-color d-flex gap-2">
                            <input type="text" placeholder="Search" aria-label="Search" aria-describedby="search-addon"
                                   class="form-control rounded" name="SearchString" value="@ViewData["CurrentFilter"]" />
                            <div class="d-flex gap-2">
                                <select class="form-select rounded" asp-for="PropertyCategory">
                                    <option value="">Filter by Category</option>
                                    @foreach (var item in Model.Categories)
                                    {
                                        <option value="@item.Id">@item.CategoryDescription</option>
                                    }
                                </select>
                                <select onchange="updateCitiesDropdown(this)" class="form-select rounded" asp-for="PropertyCountry">
                                    <option value="">Filter by Country</option>
                                    @foreach (var item in Model.Countries)
                                    {
                                        <option value="@item.id">@item.CountryName</option>
                                    }
                                </select>
                                @{
                                    var dispCity = (@ViewData["PropertyCountry"].ToString() != "0") ? "" : "d-none";
                                }
                                <select class="form-select rounded @dispCity" id="city-select" asp-for="PropertyCity">
                                    <option value="">Filter by City</option>
                                    @foreach (var item in Model.Cities)
                                    {
                                        <option value="@item.Id">@item.CityName</option>
                                    }
                                </select>
                            </div>
                            <input type="submit" value="Search" class="btn btn-outline-primary" />
                            <a asp-action="Index" class="btn btn-primary">Clear Filter</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-12">
            <div class="row">
                @foreach (var item in Model.Properties)
                {
                    <div class="col-lg-4 my-2 col-md-6 p-0">
                        <div class="card grid-margin card-rounded property-card h-100 d-flex flex-column justify-content-between p-0">
                            @if (@item.MainImage.ImagePath != null)
                            {
                                <div style="position: relative">
                                    <img class="card-rounded-top card-img-top" src="~/@item.MainImage.ImagePath" />
                                    <div class="overlay-div card-rounded-top"></div>
                                </div>
                            }
                            @{
                                var textColor = @item.MainImage.ImagePath != null ? "text-white" : "";
                            }
                            <div class="card-img-overlay">
                                <div class="h-100">
                                    <div class="h-100 p-2">
                                        <h2 class="property-title">
                                            <a class="@textColor" asp-action="Details" asp-route-id="@item.Id">
                                                @Html.DisplayFor(modelItem => item.PropertyTitle)
                                            </a>
                                        </h2>
                                        <p class="property-description @textColor" style="@textColor">
                                            @if (item.PropertyDescription == null)
                                            {
                                                <span>There is no description for this property.</span>
                                            }
                                            @Html.DisplayFor(modelItem => item.PropertyDescription)
                                        </p>
                                    </div>
                                </div>
                            </div>
                            @{
                                var style = @item.MainImage.ImagePath == null ? "position: absolute; bottom: 0" : "";
                            }
                            <div class="row px-4 pb-3 w-100" style="@style">
                                <div class="col-6">
                                    <h4 class="text-secondary">
                                        <i class="fa-solid fa-dollar-sign"></i>
                                        @Html.DisplayFor(modelItem => item.PricePerDay)
                                        <br /><small style="text-transform: none;">per day</small>
                                    </h4>
                                </div>
                                <div class="col-6">
                                    <h4 class="text-secondary">
                                        <i class="fa-solid fa-house"></i>
                                        @item.Category.CategoryDescription
                                    </h4>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
